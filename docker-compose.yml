services:
    reverse-proxy:
        image: traefik:v.3.1
        command:
            - '--api.insecure=true'
            - '--providers.docker'
        ports:
            # The HTTP port of Traefik
            - '80:80'
            # The Web UI (enabled by --api.insecure=true)
            - '8080:8080'
        volumes:
            # So that Traefik can listen to the Docker events
            - /var/run/docker.sock:/var/run/docker.sock

    digiForms-db:
        image: postgres:13
        restart: always
        ports:
            - ${POSTGRES_PORT}:5432
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_NAME}
        volumes:
            - ./db:/var/lib/postgresql/data
        networks:
            - default

    digiForms:
        env_file:
            - .env
        build:
            context: .
            args:
                NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
                CLERK_SECRET_KEY: ${CLERK_SECRET_KEY}
                DB_URL: ${DB_URL}
        ports:
            - ${APP_PORT}:3000
        restart: always
        depends_on:
            - db
        environment:
            DB_URL: ${DB_URL}
        networks:
            - default

networks:
    default:
        external: true
        name: ${NETWORK_NAME}
